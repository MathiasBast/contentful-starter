{"version":3,"sources":["webpack:///./src/components/article-preview.module.css","webpack:///./src/components/article-preview.js","webpack:///./src/pages/blog.module.css","webpack:///./src/pages/blog.js"],"names":["module","exports","article","className","styles","preview","console","log","heroImage","alt","fluid","previewTitle","to","slug","title","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","tags","map","tag","key","BlogIndex","render","siteTitle","get","this","posts","location","props","style","background","hero","node","React","Component","pageQuery"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,aAAe,8CAA8C,IAAM,uC,kCCDrF,+EAMe,oBAAGC,EAAH,EAAGA,QAAH,OACb,yBAAKC,UAAWC,IAAOC,SACpBC,QAAQC,IAAIL,EAAQM,WACrB,kBAAC,IAAD,CAAKC,IAAI,GAAGC,MAAOR,EAAQM,UAAUE,QACrC,wBAAIP,UAAWC,IAAOO,cACpB,kBAAC,IAAD,CAAMC,GAAE,SAAWV,EAAQW,MAASX,EAAQY,QAE9C,+BAAQZ,EAAQa,aAChB,yBACEC,wBAAyB,CACvBC,OAAQf,EAAQgB,YAAYC,oBAAoBC,QAGnDlB,EAAQmB,MACPnB,EAAQmB,KAAKC,KAAI,SAAAC,GAAG,OAClB,uBAAGpB,UAAWC,IAAOmB,IAAKC,IAAKD,GAC5BA,S,qBCrBXvB,EAAOC,QAAU,CAAC,KAAO,6B,2NCOnBwB,E,0FACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,0CAExB,OACE,kBAAC,IAAD,CAAQE,SAAUF,KAAKG,MAAMD,UAC3B,yBAAKE,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,CAAQpB,MAAOa,IACf,yBAAKxB,UAAWC,IAAO+B,MAAvB,QACA,yBAAKhC,UAAU,WACb,wBAAIA,UAAU,oBAAd,mBACA,wBAAIA,UAAU,gBACX2B,EAAMR,KAAI,YAAe,IAAZc,EAAW,EAAXA,KACZ,OACE,wBAAIZ,IAAKY,EAAKvB,MACZ,kBAAC,IAAD,CAAgBX,QAASkC,a,GAhBrBC,IAAMC,WA4Bfb,YAER,IAAMc,EAAS","file":"component---src-pages-blog-js-c2ec1e2c075d64fb4c88.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewTitle\":\"article-preview-module--previewTitle--dtVfR\",\"tag\":\"article-preview-module--tag--1jiS7\"};","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport styles from './article-preview.module.css'\r\n\r\nexport default ({ article }) => (\r\n  <div className={styles.preview}>\r\n    {console.log(article.heroImage)}\r\n    <Img alt=\"\" fluid={article.heroImage.fluid} />\r\n    <h3 className={styles.previewTitle}>\r\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\r\n    </h3>\r\n    <small>{article.publishDate}</small>\r\n    <div\r\n      dangerouslySetInnerHTML={{\r\n        __html: article.description.childMarkdownRemark.html,\r\n      }}\r\n    />\r\n    {article.tags &&\r\n      article.tags.map(tag => (\r\n        <p className={styles.tag} key={tag}>\r\n          {tag}\r\n        </p>\r\n      ))}\r\n  </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"blog-module--hero--cGrJo\"};","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport { Helmet } from 'react-helmet'\r\nimport styles from './blog.module.css'\r\nimport Layout from '../components/layout'\r\nimport ArticlePreview from '../components/article-preview'\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\r\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <div style={{ background: '#fff' }}>\r\n          <Helmet title={siteTitle} />\r\n          <div className={styles.hero}>Blog</div>\r\n          <div className=\"wrapper\">\r\n            <h2 className=\"section-headline\">Recent articles</h2>\r\n            <ul className=\"article-list\">\r\n              {posts.map(({ node }) => {\r\n                return (\r\n                  <li key={node.slug}>\r\n                    <ArticlePreview article={node} />\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\r\n      edges {\r\n        node {\r\n          title\r\n          slug\r\n          publishDate(formatString: \"MMMM Do, YYYY\")\r\n          tags\r\n          heroImage {\r\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\r\n              ...GatsbyContentfulFluid_tracedSVG\r\n            }\r\n          }\r\n          description {\r\n            childMarkdownRemark {\r\n              html\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}